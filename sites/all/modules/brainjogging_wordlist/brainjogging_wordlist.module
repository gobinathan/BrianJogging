<?php

function brainjogging_wordlist_form_alter(&$form, &$form_state, $form_id) {
   global $user;
   if( $form_id == "word_list_node_form" || $form_id == "word_list_category_node_form" || $form_id == "image_node_form" ){
    // Remove and alter fields
    unset($form['body_field']['format']);
    unset($form['revision_information']);
    $form['options']['#collapsible'] = FALSE;
    $form['name'] = array('#type' => 'value', '#value' => $user->name);
    unset($form['author']);
    unset($form['options']['promote'],$form['options']['sticky']);
    }
   if( $form_id == "word_list_node_form"){
      // Add category filed
      $form['instruction'] = array(
      '#type' => 'textarea', 
      '#title' => t('WordList Instruction'), 
      '#default_value' => brainjogging_wordlist_get_instruction($form['nid']['#value']),
       '#weight' => 1,
      '#required' => TRUE
    );
    $form['category_id'] = array(
      '#type' => 'select', 
      '#title' => t('Category'), 
      '#default_value' => brainjogging_wordlist_get_wl_category($form['nid']['#value']),
      '#required' => TRUE,
      '#weight' => -3,
      '#options' => brainjogging_wordlist_get_wl_categories(),
      '#description' => t('select the category for this world list'),
    );
     $form['disability'] = array(
      '#type' => 'select', 
      '#title' => t('Disability'), 
      '#default_value' => brainjogging_wordlist_get_update_disability($form['nid']['#value']),
      '#required' => TRUE,
      '#weight' => -4,
      '#options' => brainjogging_wordlist_get_disability(),
      '#description' => t('select the disability level for this world list'),
    );
     
     
      $form['age'] = array(
      '#type' => 'select', 
      '#title' => t('Age group'), 
      '#default_value' => brainjogging_wordlist_get_age($form['nid']['#value']),
      '#options' => array(
        '5-10' => t('5-10'), 
        '10-15' => t('10-15'), 
        '5-15' => t('5-15'),
        ),
        '#description' => t('Select the age group for the wordlist.'),
        
    );
     
       $form['wordlist_type'] = array(
      '#type' => 'radios', 
      '#title' => t('WordList Type'),
      '#required' => TRUE,
      '#weight' => 3,
      '#default_value' => brainjogging_wordlist_get_type($form['nid']['#value']), 
      '#options' => array(0=>t('single'), 1=>t('global')),

    );
      $form['wordlist_level'] = array(
      '#type' => 'radios', 
      '#title' => t('WordList Level'),
      '#required' => TRUE,
      '#weight' => -2,
      '#default_value' => brainjogging_wordlist_get_level($form['nid']['#value']), 
      '#options' => array(0=>t('simple'), 1=>t('phrase')),

    );
 
  }
  if( $form_id == "word_list_category_node_form"){
    //alter fields
    $form['options']=array('#type' => 'value', '#value' => $form['options']['status']['#default_value'] = 1);
  }
  
    if( $form_id == "image_node_form"){
    //alter fields
    unset($form['attachments']);
    unset($form['image']['rebuild_images']);
    
    $form['options']=array('#type' => 'value', '#value' => $form['options']['status']['#default_value'] = 1);
  }
  
 
  
}

function brainjogging_wordlist_get_wl_categories(){
 $res = db_query("SELECT nid,title FROM {node} WHERE type = 'word_list_category' ORDER BY title");
 while($obj = db_fetch_object($res)){
  $categories[$obj->nid] = $obj->title;
 }
 return $categories;
}

function brainjogging_wordlist_get_disability(){
 $res = db_query("SELECT did,name FROM {bj_learning_disability}");
 while($obj = db_fetch_object($res)){
  $disabities[$obj->did] = $obj->name;
 }
 return $disabities;
}
function brainjogging_wordlist_get_instruction($nid){
  if($nid){
    return db_result(db_query("SELECT instruction FROM {bj_wordlist_relativity} WHERE wl_id = %d",$nid));    
  }
}

function brainjogging_wordlist_get_update_disability($nid){
  if($nid){
    return db_result(db_query("SELECT disability FROM {bj_wordlist_relativity} WHERE wl_id = %d",$nid));    
  }
}
function brainjogging_wordlist_get_age($nid){
  if($nid){
    return db_result(db_query("SELECT age FROM {bj_wordlist_relativity} WHERE wl_id = %d",$nid));    
  }
}

function brainjogging_wordlist_get_type($nid){
  if($nid){
    return db_result(db_query("SELECT type FROM {bj_wordlist_relativity} WHERE wl_id = %d",$nid));    
  }
}
function brainjogging_wordlist_get_level($nid){
  if($nid){
    return db_result(db_query("SELECT level FROM {bj_wordlist_relativity} WHERE wl_id = %d",$nid));    
  }
}


function brainjogging_wordlist_get_wl_category($nid){
  if($nid){
    return db_result(db_query("SELECT c_id FROM {bj_wordlist_relativity} WHERE wl_id = %d",$nid));    
  }
}






function brainjogging_wordlist_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  if($node->type == 'word_list'){
  switch ($op) {
    
    case 'validate':
      if(preg_match('/[^a-z0-9,.&\s]/i', $node->body)){
       form_set_error('body', t('special charactors are not alloweded.'));
      }
      if($node->wordlist_level==0){
        $num_words  =str_word_count($node->body);
        if($num_words < 15 || $num_words > 25 ){
          form_set_error('body', t('words must be 15.'));
        }
      }
      if($node->wordlist_level==1){
        $text = trim($node->body);
        $textAr = explode("\n", $text);
        foreach ($textAr as $line) {
         $num_words  =str_word_count($line);
         if($num_words > 4 ){
          form_set_error('body', t('words must be 4 per  line.'));
          }
        }
      }
      break;
    case 'insert':
      db_query("INSERT INTO {bj_wordlist_relativity} (c_id,wl_id,type,level,disability,age,instruction) VALUES(%d, %d, %d, %d, %d, '%s', '%s')", $node->category_id, $node->nid, $node->wordlist_type, $node->wordlist_level, $node->disability, $node->age, $node->instruction);
      break;
    case 'update':
      db_query("UPDATE {bj_wordlist_relativity} SET c_id = %d, type = %d, level = %d, disability = %d, age = '%s', instruction = '%s' WHERE  wl_id = %d", $node->category_id, $node->wordlist_type, $node->wordlist_level, $node->disability, $node->age, $node->instruction,$node->nid);
      break;
    case 'load':
      $node->category_id = brainjogging_wordlist_get_wl_category($node->nid);
      break;
    case 'delete';
      db_query("DELETE FROM {bj_wordlist_relativity} WHERE wl_id = %d", $node->nid);
      break;
  }  
  }  
}



?>