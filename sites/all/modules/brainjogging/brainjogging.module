<?php

/**
 * Implements hook_menu().
 */
function brainjogging_menu() {
  
  $items['admin/brainjogging/grade'] = array(
    'title' => 'User Grades',
    'description' => 'List, add, and edit user grades.',
    'page callback' => 'bj_grade_admin',
    'page arguments' => array('list'),
    'access arguments' => array('administer grades'),
    'file' => 'grade.admin.inc',
  );
  $items['admin/brainjogging/grade/list'] = array(
    'title' => 'List',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items['admin/brainjogging/grade/create'] = array(
    'title' => 'Add Grade',
    'page arguments' => array('create'),
    'access arguments' => array('administer grades'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'grade.admin.inc',
  );
  $items['admin/brainjogging/grade/edit/%'] = array(
    'title' => 'Update Grade',
    'page arguments' => array('edit'),
    'access arguments' => array('administer grades'),
    'file' => 'grade.admin.inc',
  );
  $items['admin/brainjogging/grade/delete/%'] = array(
    'title' => 'Delete Grade',
    'page arguments' => array('delete'),
    'access arguments' => array('administer grades'),
    'file' => 'grade.admin.inc',
  );
  $items['brainjogging'] = array(
    'title' => 'Blogs',
    'page callback' => 'blog_page_last',
    'access arguments' => array('access content'),
    'type' => MENU_SUGGESTED_ITEM,
  );
  //learning disablity
  
  $items['admin/brainjogging/learning_disability'] = array(
    'title' => 'User Learing Disability',
    'description' => 'List, add, and edit user learning disability.',
    'page callback' => 'bj_learning_disability_admin',
    'page arguments' => array('list'),
    'access arguments' => array('administer learning disablities'),
    'file' => 'learning_disability.admin.inc',
  );
  $items['admin/brainjogging/learning_disability/list'] = array(
    'title' => 'List',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items['admin/brainjogging/learning_disability/create'] = array(
    'title' => 'Add Learning Disability',
    'page arguments' => array('create'),
    'access arguments' => array('administer learning disablities'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'learning_disability.admin.inc',
  );
  $items['admin/brainjogging/learning_disability/edit/%'] = array(
    'title' => 'Update Learning Disability',
    'page arguments' => array('edit'),
    'access arguments' => array('administer learning disablities'),
    'file' => 'learning_disability.admin.inc',
  );
  $items['admin/brainjogging/learning_disability/delete/%'] = array(
    'title' => 'Delete Learning Disability',
    'page arguments' => array('delete'),
    'access arguments' => array('administer learning disablities'),
    'file' => 'learning_disability.admin.inc',
  );
  //learing disablity end
  
  //school
  
  $items['admin/brainjogging/school'] = array(
    'title' => 'School',
    'description' => 'List, add, and edit user school.',
    'page callback' => 'bj_school_admin',
    'page arguments' => array('list'),
    'access arguments' => array('administer learning disablities'),
    'file' => 'school.admin.inc',
  );
  $items['admin/brainjogging/school/list'] = array(
    'title' => 'List',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items['admin/brainjogging/school/create'] = array(
    'title' => 'Add School',
    'page arguments' => array('create'),
    'access arguments' => array('administer learning disablities'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'school.admin.inc',
  );
  $items['admin/brainjogging/school/edit/%'] = array(
    'title' => 'Update School',
    'page arguments' => array('edit'),
    'access arguments' => array('administer learning disablities'),
    'file' => 'school.admin.inc',
  );
  $items['admin/brainjogging/school/delete/%'] = array(
    'title' => 'Delete School',
    'page arguments' => array('delete'),
    'access arguments' => array('administer learning disablities'),
    'file' => 'school.admin.inc',
  );
  
  //school end
  
  //Letter flash settings
  $items['admin/brainjogging/settings/letter_flash'] = array(
    'title' => 'Settings for Letter flash',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('brainjogging_site_settings_manage'),
		'file' => 'site_settings.pages.inc',
    'access arguments' => array('manage site settings')
  );
  return $items;
}

//remove anonymous registeration
function brainjogging_menu_alter(&$items) {
  unset($items['user/register']);
  $items['user/%user_category/edit']['access callback'] = 'bj_user_edit_access';
}

function bj_user_edit_access($account){
  if(array_key_exists(7,$GLOBALS['user']->roles)){
    return FALSE;
  }
  return (($GLOBALS['user']->uid == $account->uid) || user_access('administer users')) && $account->uid > 0;
}

function brainjogging_perm() {
  return array("administer grades","administer learning disablities","manage site settings");
}


function brainjogging_form_alter(&$form, &$form_state, $form_id){
  //print_r($form);
  if($form_id == 'user_filter_form'){
    unset($form['filters']['filter']['#options']['permission']);
    unset($form['filters']['status']['permission']);
  }
  
  drupal_add_js(drupal_get_path('module', 'brainjogging') .'/js/bj_users.js');
  
  $grades = array();
  $grade_res = db_query("SELECT * FROM {bj_grade}");
  while($grade_obj = db_fetch_object($grade_res)){
    $grades[$grade_obj->gid] = $grade_obj->name;
  }
  
  $lds = array();
  $ld_res = db_query("SELECT * FROM {bj_learning_disability}");
  while($ld_obj = db_fetch_object($ld_res)){
    $lds[$ld_obj->did] = $ld_obj->name;
  }
  
  $teachers = array();
  $teacher_res = db_query ("SELECT u.uid, u.name
                      FROM users u, role r, users_roles ur
                      WHERE u.uid = ur.uid
                      AND ur.rid = r.rid
                      AND r.name = 'teacher'");
  
  while($teacher_obj = db_fetch_object($teacher_res)){
    $teachers[$teacher_obj->uid] = $teacher_obj->name;
  }
  
  if($form_id == 'user_register'){
    global $user;
    if($user->uid){
      $options = $form['account']['roles']['#options'];
      unset($options[2]);
      unset($options[5]);
    }
    else{
      $options = array('6' => 'Independent client','7' => 'Dependent client');
    }
    
    
    $form['account']['roles'] = array(
      '#type' => 'select',
      '#title' => t('Roles'),
      '#options' => $options,
      '#description' => t('Select the type of user you are creating.'),
      '#required' => TRUE,
      '#weight' => 6,
    );
    
    if($user->uid){
      $form['Brainjogging Information']['teacher'] = array(
        '#type' => 'select',
        '#title' => t('Teachers'),
        '#options' => $teachers,
        '#description' => t('Select teacher for this client.'),
        '#weight' => 7,
      );
    }
    
    if($user->uid){ 
      $form['Brainjogging Information']['grade'] = array(
        '#type' => 'select',
        '#title' => t('Grade'),
        '#options' => $grades,
        '#description' => t('Grade at current.'),
        '#weight' => 11,
      );
    }
    
    $form['Brainjogging Information']['learning_disablity'] = array(
      '#type' => 'select',
      '#title' => t('Learning Disablity'),
      '#options' => $lds,
      '#description' => t('Learning Disabiltiy.'),
      '#weight' => 12,
    );
    $form['#validate'] = array('bj_user_details_validator');
  }
  if($form_id == 'user_profile_form'){
     //Load the user object 
    $user =user_load(arg(1));
    //make Username field hidden
    unset($form['account']['name']);
    $form['account']['name'] = array('#type' => 'value', '#value' => $user->name);
    
    unset($form['timezone']);
    
    $options = $form['account']['roles']['#options'];
    unset($options[2]);
    unset($options[5]);
    
    $a = array(4,5,6);
    
    if(!count(array_intersect($a,array_keys($user->roles)))){
      $form['account']['roles'] = array(
        '#type' => 'select',
        '#title' => t('Roles'),
        '#options' => $options,
        '#default_value' => array_keys($user->roles),
        '#description' => t('Select the type of user you are creating.'),
        '#required' => TRUE,
        '#weight' => 6,
      );
      $form['account']['teacher'] = array(
        '#type' => 'select',
        '#title' => t('Teachers'),
        '#options' => $teachers,
        '#default_value' => $user->teacher,
        '#description' => t('Select teacher for this client.'),
        '#weight' => 7,
      );
      $form['account']['grade'] = array(
        '#type' => 'select',
        '#title' => t('Grade'),
        '#options' => $grades,
        '#default_value' => $user->grade,
        '#description' => t('Grade at current.'),
        '#weight' => 11,
      );
      
      $form['account']['learning_disablity'] = array(
        '#type' => 'select',
        '#title' => t('Learning Disablity'),
        '#options' => $lds,
        '#default_value' => $user->learning_disability,
        '#description' => t('Learning Disabiltiy.'),
        '#weight' => 12,
      );
    }
    else{
      unset($form['account']['roles']);
      $form['account']['roles'] = array('#type' => 'value','#value'=>5);
    }
    $form['#validate'] = array('bj_user_details_validator');
  }
}

function bj_user_details_validator(&$form, &$form_state){
  global $user;
  if(!in_array($form_state['values']['roles'],array(3,4,5))){
    if($user->uid && in_array($form_state['values']['teacher'],array(NULL,'',0))) {
      form_set_error('teacher', t('The Teacher must be mandatory for clients.'));
    }
    if(!(boolean)($form_state['values']['profile_parent_fname'])) {
      form_set_error('parent_fname', t('The parent firstname must be mandatory for clients.'));
    }
    if(!(boolean)($form_state['values']['profile_parent_lname'])) {
      form_set_error('parent_lname', t('The parent lastname must be mandatory for clients.'));
    }
    if(!(boolean)($form_state['values']['profile_parent_email'])) {
      form_set_error('parent_mail', t('The Teacher must be mandatory for clients.'));
    }
    if($user->uid && !(boolean)($form_state['values']['grade'])) {
      form_set_error('grade', t('The grade must be mandatory for clients.'));
    }
    if(!(boolean)($form_state['values']['learning_disablity'])) {
      form_set_error('learning_disablity', t('The learning disablity must be mandatory for clients.'));
    }
  }
  $role = $form_state['values']['roles'];
  unset($form_state['values']['roles']);
  $form_state['values']['roles'][$role] = $role;
}

function brainjogging_user($op, &$edit, &$account, $category = NULL) {
  switch($op){
    case 'view':
      $user_obj = db_fetch_object(db_query("SELECT * FROM {bj_user_details} WHERE uid = ".$account->uid));
      if (!isset($account->content['user_info'])) {
        $account->content['user_info'] = array();
      }
      $account->content['user_info'] += array(
        '#type' => 'user_profile_category',
        '#attributes' => array('class' => 'user-member'),
        '#weight' => 5,
        '#title' => t('User Details'),
      );
      if(end(array_keys($account->roles))==6 ||end(array_keys($account->roles))==7){
        $account->content['user_info']['parent_first_name'] = array(
          '#type' => 'user_profile_item',
          '#title' => t('parent_first_name'),
          '#value' => $user_obj->parent_first_name,
        );
         $account->content['user_info']['parent_last_name'] = array(
          '#type' => 'user_profile_item',
          '#title' => t('Parent Last Name'),
          '#value' => $user_obj->parent_last_name,
        );
         
        $account->content['user_info']['parent_email_address'] = array(
          '#type' => 'user_profile_item',
          '#title' => t('Parent Email Address'),
          '#value' => $user_obj->parent_email_address,
          
        );
        $account->content['user_info']['reason_for_bj'] = array(
          '#type' => 'user_profile_item',
          '#title' => t('Reson for Brain Jogging'),
          '#value' => $user_obj->reason_for_bj,
        ); 
      }
      $account->content['user_info']['schoolname'] = array(
        '#type' => 'user_profile_item',
        '#title' => t('Schoolname'),
        '#value' => $user_obj->schoolname,
      );
      $account->content['user_info']['phone'] = array(
        '#type' => 'user_profile_item',
        '#title' => t('Phone'),
        '#value' => $user_obj->phone,
      );
      $account->content['user_info']['address'] = array(
        '#type' => 'user_profile_item',
        '#title' => t('address'),
        '#value' => $user_obj->address,
      );
    
      break;
    case 'load':
      //add the grade
      $grade = db_result(db_query("SELECT gid FROM {bj_user_grades} WHERE uid = ".$account->uid));
      $account->grade = $grade;
      //add the Learning Disabilty
      $ld = db_result(db_query("SELECT did FROM {bj_user_disabilities} WHERE uid = ".$account->uid));
      $account->learning_disability = $ld;
      break;
    case 'insert':
      $role = array_keys($edit['roles']);
      if($edit['uid']){
        
        //if(in_array($role[0],array(7))){
        //  $user['name'] = strtolower($edit['parent_fname']."_".$edit['parent_lname']);
        //  $user['pass'] = $edit['pass'];
        //  $user['mail'] = $edit['parent_mail'];
        //  $user['init'] = $edit['parent_mail'];
        //  $user['roles'] = array(5=>'parent');
        //  $user['status'] = 1;
        //  $user['fname'] = $edit['parent_fname'];
        //  $user['lname'] = $edit['parent_lname'];
        //  $user['phone'] = $edit['phone'];
        //  $user['address'] = $edit['address'];
        //  $parent = user_save('',$user);
        //  db_query("INSERT INTO {bj_user_parents} (uid,pid) VALUES (".$edit['uid'].",".$parent->uid.") ");
        //}
        
        
        if(in_array($edit['roles'],array(6,7)) ){        
          db_query("INSERT INTO {bj_user_teachers} (uid,tid) VALUES (".$edit['uid'].",".$edit['teacher'].")");
          unset($edit['teacher']);
          
          db_query("INSERT INTO {bj_user_grades} (uid,gid) VALUES (".$edit['uid'].",".$edit['grade'].")");
          unset($edit['grade']);
          
          db_query("INSERT INTO {bj_user_disabilities} (uid,did) VALUES (".$edit['uid'].",".$edit['learning_disablity'].")");
          unset($edit['learning_disablity']);
        }
        else{
          unset($edit['teacher']);
          unset($edit['grade']);
          unset($edit['learning_disablity']);
        }
      }
      break;
  case 'after_update':
    if($account->uid){
      if(in_array($edit['roles'],array(6,7)) ){ 
        db_query("UPDATE {bj_user_grades} SET gid = ".$edit['grade']." WHERE uid = ".$account->uid);
        db_query("UPDATE {bj_user_disabilities} SET did = ".$edit['learning_disablity']." WHERE uid = ".$account->uid);
      }
    }
    break;
  case 'delete':
    db_query("DELETE FROM {bj_user_details} WHERE uid = ".$account->uid);
    db_query("DELETE FROM {bj_user_grades} WHERE uid = ".$account->uid);
    db_query("DELETE FROM {bj_user_disabilities} WHERE uid = ".$account->uid);
    break;
  }
}