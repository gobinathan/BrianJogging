<?php

/**
 * Implements hook_menu().
 */
function brainjogging_menu() {
  
  $items['admin/brainjogging'] = array(
    'title' => 'My Tools',
    'description' => '',
    'page callback' => 'bj_show_dashboard',
    'access callback' => 'user_is_logged_in',
  );
  
   $items['admin/brainjogging/tests'] = array(
    'title' => 'Run Tests',
    'description' => '',
    'page callback' => 'bj_show_dashboard',
    'access callback' => 'user_is_logged_in',
    'weight' => -14,
  );
  
  // Admin user pages.
  
  $items['admin/brainjogging/user'] = array(
    'title' => 'User management',
    'description' => 'List, add, and edit users.',
    'page callback' => 'user_admin',
    'page arguments' => array('list'),
    'access arguments' => array('administer users'),
    'file' => 'user.admin.inc',
    'file path' => drupal_get_path('module', 'user'),
  );
  
  $items['admin/brainjogging/user/list'] = array(
    'title' => 'List',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  
  $items['admin/brainjogging/user/create'] = array(
    'title' => 'Add user',
    'page arguments' => array('create'),
    'access arguments' => array('administer users'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'user.admin.inc',
    'file path' => drupal_get_path('module', 'user'),
  );
  
  $items['admin/brainjogging/user_view'] = array(
    'title' => 'Manage My account',
    'page callback' => 'bj_user_view',
    'access callback' => 'user_is_logged_in',
    'weight' => -13,
  );
  
  $items['admin/brainjogging/node'] = array(
    'title' => 'Question bank',
    'description' => "View, edit, and delete your site's content.",
    'page callback' => 'drupal_get_form',
    'page arguments' => array('node_admin_content'),
    'access arguments' => array('administer nodes'),
    'file' => 'node.admin.inc',
    'file path' => drupal_get_path('module', 'node'),
    'weight' => -15,
  );
  
  $items['admin/brainjogging/node/overview'] = array(
    'title' => 'List',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  
  foreach (node_get_types('types', NULL, TRUE) as $type) {
    $type_url_str = str_replace('_', '-', $type->type);
    $items['admin/brainjogging/node/add/'. $type_url_str] = array(
      'title' => "Add " .drupal_ucfirst($type->name),
      'title callback' => 'check_plain',
      'page callback' => 'node_add',
      'page arguments' => array(4),
      'access callback' => 'node_access',
      'access arguments' => array('create', $type->type),
      'description' => $type->description,
      'file' => 'node.pages.inc',
      'file path' => drupal_get_path('module', 'node'),
    );
  }
  
  
  $items['admin/brainjogging/logout'] = array(
    'title' => 'Log out',
    'access callback' => 'user_is_logged_in',
    'page callback' => 'user_logout',
    'weight' => 10,
    'file' => 'user.pages.inc',
    'file path' => drupal_get_path('module', 'user'),
  );    
    
    
  $items['admin/brainjogging/grade'] = array(
    'title' => 'User Grades',
    'description' => 'List, add, and edit user grades.',
    'page callback' => 'bj_grade_admin',
    'page arguments' => array('list'),
    'access arguments' => array('administer grades'),
    'file' => 'grade.admin.inc',
  );
  $items['admin/brainjogging/grade/list'] = array(
    'title' => 'List',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items['admin/brainjogging/grade/create'] = array(
    'title' => 'Add Grade',
    'page arguments' => array('create'),
    'access arguments' => array('administer grades'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'grade.admin.inc',
  );
  $items['admin/brainjogging/grade/edit/%'] = array(
    'title' => 'Update Grade',
    'page arguments' => array('edit'),
    'access arguments' => array('administer grades'),
    'file' => 'grade.admin.inc',
  );
  $items['admin/brainjogging/grade/delete/%'] = array(
    'title' => 'Delete Grade',
    'page arguments' => array('delete'),
    'access arguments' => array('administer grades'),
    'file' => 'grade.admin.inc',
  );
  //learning disablity
  
  $items['admin/brainjogging/learning_disability'] = array(
    'title' => 'User Learing Disability',
    'description' => 'List, add, and edit user learning disability.',
    'page callback' => 'bj_learning_disability_admin',
    'page arguments' => array('list'),
    'access arguments' => array('administer learning disablities'),
    'file' => 'learning_disability.admin.inc',
  );
  $items['admin/brainjogging/learning_disability/list'] = array(
    'title' => 'List',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items['admin/brainjogging/learning_disability/create'] = array(
    'title' => 'Add Learning Disability',
    'page arguments' => array('create'),
    'access arguments' => array('administer learning disablities'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'learning_disability.admin.inc',
  );
  $items['admin/brainjogging/learning_disability/edit/%'] = array(
    'title' => 'Update Learning Disability',
    'page arguments' => array('edit'),
    'access arguments' => array('administer learning disablities'),
    'file' => 'learning_disability.admin.inc',
  );
  $items['admin/brainjogging/learning_disability/delete/%'] = array(
    'title' => 'Delete Learning Disability',
    'page arguments' => array('delete'),
    'access arguments' => array('administer learning disablities'),
    'file' => 'learning_disability.admin.inc',
  );
  //learing disablity end
  
  //school
  
  $items['admin/brainjogging/school'] = array(
    'title' => 'School',
    'description' => 'List, add, and edit user school.',
    'page callback' => 'bj_school_admin',
    'page arguments' => array('list'),
    'access arguments' => array('administer schools'),
    'file' => 'school.admin.inc',
  );
  $items['admin/brainjogging/school/list'] = array(
    'title' => 'List',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items['admin/brainjogging/school/create'] = array(
    'title' => 'Add School',
    'page arguments' => array('create'),
    'access arguments' => array('administer schools'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'school.admin.inc',
  );
  $items['admin/brainjogging/school/edit/%'] = array(
    'title' => 'Update School',
    'page arguments' => array('edit'),
    'access arguments' => array('administer schools'),
    'file' => 'school.admin.inc',
  );
  $items['admin/brainjogging/school/delete/%'] = array(
    'title' => 'Delete School',
    'page arguments' => array('delete'),
    'access arguments' => array('administer schools'),
    'file' => 'school.admin.inc',
  );
  
  //school end
  
  //Letter flash settings
  $items['admin/brainjogging/settings/letter_flash'] = array(
    'title' => 'Letter flash Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('brainjogging_site_settings_manage'),
		'file' => 'site_settings.pages.inc',
    'access arguments' => array('manage site settings')
  );
  return $items;
}

function brainjogging_init(){
  if(!user_is_logged_in() && arg(0) != 'user' && arg(1) != 'login'){
    drupal_goto('user/login');
  }
  
  if(brainjogging_is_student() && arg(3) != 'emset' && $_SESSION['brainjogging']['eye_test']!=true){
    
    if(arg(0) == 'brainjogging' && arg(1) == 'test' && arg(2)!= 'eye_movement') {
    drupal_goto('brainjogging/test/eye_movement');
    }
  }
  
  if(user_is_logged_in()){
    global $user;
    // Call user load to load all the data from non-core modules
    $user = user_load($user->uid);
  }
  
 
}

function bj_show_dashboard(){
  drupal_goto('brainjogging/test/dashboard');
}

function bj_user_view(){
  drupal_goto('user/'.$GLOBALS['user']->uid);
}

//remove anonymous registeration
function brainjogging_menu_alter(&$items) {
  unset($items['user/register']);
  $items['user/%user_category/edit']['access callback'] = 'bj_user_edit_access';
  $items['user/%user_category/edit/Brainjogging Information']['access callback'] = 'bj_info_edit_access';
}

function bj_info_edit_access(){
  global $user;
  $edit_user = user_load(arg(1));
  return $user->uid != $edit_user->uid ? true : false;
}

function bj_user_edit_access($account){
  if(array_key_exists(7,$GLOBALS['user']->roles)){
    return FALSE;
  }
  return (($GLOBALS['user']->uid == $account->uid) || user_access('administer users')) && $account->uid > 0;
}

function brainjogging_perm() {
  return array("administer grades","administer learning disablities","manage site settings","administer schools");
}


function brainjogging_form_alter(&$form, &$form_state, $form_id){
  //print_r($form);
  if($form_id == 'user_filter_form'){
    global $user;
    if(in_array(8,array_keys($user->roles))){
      unset($form['filters']['status']['role']['#options'][3]);
    }
    unset($form['filters']['filter']['#options']['permission']);
    unset($form['filters']['status']['permission']);
  }
  
  drupal_add_js(drupal_get_path('module', 'brainjogging') .'/js/bj_users.js');
  
  $grades = array();
  $grade_res = db_query("SELECT * FROM {bj_grade}");
  while($grade_obj = db_fetch_object($grade_res)){
    $grades[$grade_obj->gid] = $grade_obj->name;
  }
  
  $schools = array();
  $schools_res = db_query("SELECT * FROM {bj_school}");
  while($schools_obj = db_fetch_object($schools_res)){
    $schools[$schools_obj->sid] = $schools_obj->school_name;
  }
  
  $lds = array();
  $ld_res = db_query("SELECT * FROM {bj_learning_disability}");
  while($ld_obj = db_fetch_object($ld_res)){
    $lds[$ld_obj->did] = $ld_obj->name;
  }
  
  $teachers = array();
  
  if($form_id == 'user_register'){
    global $user;
    
    //get the users school ID
    $sid = db_result(db_query("SELECT sid FROM {bj_user_schools} WHERE uid = ".$user->uid));
    
    if($user->uid){
      $options = $form['account']['roles']['#options'];
      unset($options[2]);
      unset($options[5]);
    }
    else{
      $options = array('6' => 'Independent client','7' => 'Dependent client');
    }
    
    //SChool admin cant create site admin and school admin users
    if(in_array(8,array_keys($user->roles))){
      unset($options[3]);
      unset($options[8]);
    }
    
    $form['account']['roles'] = array(
      '#type' => 'select',
      '#title' => t('User Type'),
      '#options' => $options,
      '#description' => t('Select the type of user you are creating.'),
      '#required' => TRUE,
      '#weight' => 6,
    );
    
    if($user->uid){ //dont show in annonymous register page
      
      if(in_array(8,array_keys($user->roles))){ // 8=>school admin role
        $teacher_res = db_query ("SELECT u.uid, u.name
                        FROM users u, role r, users_roles ur, bj_user_schools us
                        WHERE u.uid = ur.uid
                        AND ur.rid = r.rid
                        AND u.uid = us.uid
                        AND r.name = 'teacher'
                        And us.sid = ".$sid);
      }
      else{
        $teacher_res = db_query ("SELECT u.uid, u.name
                        FROM users u, role r, users_roles ur
                        WHERE u.uid = ur.uid
                        AND ur.rid = r.rid
                        AND r.name = 'teacher'");
      }
      while($teacher_obj = db_fetch_object($teacher_res)){
        $teachers[$teacher_obj->uid] = $teacher_obj->name;
      }
      
      $form['Brainjogging Information']['teacher'] = array(
        '#type' => 'select',
        '#title' => t('Teachers'),
        '#options' => $teachers,
        '#description' => t('Select teacher for this client.'),
        '#weight' => 7,
      );
      
      $form['Brainjogging Information']['grade'] = array(
        '#type' => 'select',
        '#title' => t('Grade'),
        '#options' => $grades,
        '#description' => t('Grade at current.'),
        '#weight' => 11,
      );
      
      /*
       * for school administrators we have to show only his associated school
      */
      if(in_array(8,array_keys($user->roles))){ // 8=>school admin role
        $form['Brainjogging Information']['school'] = array(
          '#type' => 'value',
          '#value' => $sid,
        );
        $form['Brainjogging Information']['school_display'] = array(
          '#title' => t('User type'),
          '#value' => t('<div id="edit-pass-pass2-wrapper" class="form-item confirm-parent">
                          <label for="edit-pass-pass2">User type: </label>
                          <ul><li>'.ucfirst(db_result(db_query("SELECT school_name from {bj_school} WHERE sid = ".$sid))).'</li></ul>
                         </div>'),
          '#weight' => 12,
        );
      }
      else{
        $form['Brainjogging Information']['school'] = array(
          '#type' => 'select',
          '#title' => t('School'),
          '#options' => $schools,
          '#description' => t('School association'),
          '#weight' => 12,
        );
      }
    }
    
    $form['Brainjogging Information']['learning_disablity'] = array(
      '#type' => 'select',
      '#title' => t('Learning Disablity'),
      '#options' => $lds,
      '#description' => t('Learning Disabiltiy.'),
      '#weight' => 12,
    );
    $form['#validate'] = array('bj_user_details_validator');
  }
  
  if($form_id == 'user_profile_form'){
    global $user;
    
    //get the user school id
    $sid = db_result(db_query("SELECT sid FROM {bj_user_schools} WHERE uid = ".$user->uid));
    
    //Load the user object 
    $user_edit = user_load(arg(1));
    
    $own_acc = $user->uid == $user_edit->uid;
    
    //make Username field hidden
    unset($form['account']['name']);
    $form['account']['name'] = array('#type' => 'value', '#value' => $user_edit->name);
    
    unset($form['timezone']);
    
    $options = $form['account']['roles']['#options'];
    unset($options[2]);
    unset($options[5]);
    
    if(arg(3) == ''){
      unset($form['account']['roles']);
      $form['account']['roles'] = array('#type' => 'value', '#value' => $user_edit->roles);
      $role = $user_edit->roles;
      unset($role[2]);
      $role = array_values($role);
      $form['account']['roles_display'] = array(
        '#title' => t('User type'),
        '#value' => t('<div id="edit-pass-pass2-wrapper" class="form-item confirm-parent">
                        <label for="edit-pass-pass2">User type: </label>
                        <ul><li>'.ucfirst($role[0]).'</li></ul>
                       </div>'),
        '#weight' => 6,
      );
    }

    //Dont show the following fields for the
    //teacher,parent,i_client,schooladmin users
    $a = array(6,7);//teacher,parent,i_client,schooladmin,siteadmin
    if(count(array_intersect($a,array_keys($user_edit->roles))) && !$own_acc){
      if(in_array(8,array_keys($user->roles))){ // 8=>school admin role
        $teacher_res = db_query ("SELECT u.uid, u.name
                        FROM users u, role r, users_roles ur, bj_user_schools us
                        WHERE u.uid = ur.uid
                        AND ur.rid = r.rid
                        AND u.uid = us.uid
                        AND r.name = 'teacher'
                        And us.sid = ".$sid);
      }
      else{
        $teacher_res = db_query ("SELECT u.uid, u.name
                        FROM users u, role r, users_roles ur
                        WHERE u.uid = ur.uid
                        AND ur.rid = r.rid
                        AND r.name = 'teacher'");
      }
      while($teacher_obj = db_fetch_object($teacher_res)){
        $teachers[$teacher_obj->uid] = $teacher_obj->name;
      }
      
      if(arg(3) == 'Brainjogging Information'){
        $form['Brainjogging Information']['teacher'] = array(
          '#type' => 'select',
          '#title' => t('Teachers'),
          '#options' => $teachers,
          '#default_value' => $user_edit->teacher,
          '#description' => t('Select teacher for this client.'),
          '#weight' => 7,
        );
        $form['Brainjogging Information']['grade'] = array(
          '#type' => 'select',
          '#title' => t('Grade'),
          '#options' => $grades,
          '#default_value' => $user_edit->grade,
          '#description' => t('Grade at current.'),
          '#weight' => 11,
        );
        
        $form['Brainjogging Information']['learning_disablity'] = array(
          '#type' => 'select',
          '#title' => t('Learning Disablity'),
          '#options' => $lds,
          '#default_value' => $user_edit->learning_disability,
          '#description' => t('Learning Disabiltiy.'),
          '#weight' => 12,
        );
      }
    }
    else{
      if(arg(3) == 'Brainjogging Information'){
        unset($form['Brainjogging Information']['profile_reason']);
      }
      if(arg(3) == 'Personal information'){
        unset($form['Personal information']['profile_parent_fname']);
        unset($form['Personal information']['profile_parent_lname']);
        unset($form['Personal information']['profile_parent_email']);
      }
    }
    
    //Show school Under Brainjogging Information tab for all users
    //except site admin
    $a = array(4,5,6,7,8);//teacher,parent,i_client,schooladmin
    if(count(array_intersect($a,array_keys($user_edit->roles)))  && arg(3) == 'Brainjogging Information'){
      /*
       * for school administrators we have to show only his associated school
      */
      if(in_array(8,array_keys($user->roles))){ // 8 => school adminstrator rid
        $form['Brainjogging Information']['school'] = array(
          '#type' => 'value',
          '#value' => $sid,
        );
        if(!$own_acc){
          $form['Brainjogging Information']['school_display'] = array(
            '#title' => t('School'),
            '#value' => t('<div id="edit-school-wrapper" class="form-item confirm-parent">
                            <label for="edit-pass-pass2">School: </label>
                            <ul><li>'.ucfirst(db_result(db_query("SELECT school_name from {bj_school} WHERE sid = ".$sid))).'</li></ul>
                           </div>'),
            '#weight' => 12,
          );
        }
      }
      else{
        $form['Brainjogging Information']['school'] = array(
          '#type' => 'select',
          '#title' => t('School'),
          '#options' => $schools,
          '#default_value' => $user_edit->school,
          '#description' => t('School association'),
          '#weight' => 12,
        );
      }
    }
    
    if($own_acc && arg(3) == ''){
      $form['account']['status'] = array('#type' => 'value','#value' => $user_edit->status);
    }
    
    $form['#validate'] = array('bj_user_edit_details_validator');
  }
}

function bj_user_edit_details_validator(&$form, &$form_state){
  global $user;
  $user_edit = user_load(arg(1));
  
  if(arg(3) == ''){
    $role = $form_state['values']['roles'];
    unset($role[2]);
    $role = array_values($role);
  }
  else{
    $role = $user_edit->roles;
    unset($role[2]);
    $role = array_keys($role);
  }
  
  if(arg(3) == 'Brainjogging Information'){
    if(!in_array($role[0],array(3))){//siteadmin
      if(!(boolean)($form_state['values']['school'])) {
        form_set_error('school', t('The school must be mandatory.'));
      }
    }
    if(!in_array($role[0],array(3,4,5,8))){//siteadmin
      if($user->uid && !(boolean)($form_state['values']['grade'])) {
        form_set_error('grade', t('The grade must be mandatory for clients.'));
      }
      if(!(boolean)($form_state['values']['learning_disablity'])) {
        form_set_error('learning_disablity', t('The learning disablity must be mandatory for clients.'));
      }
      if($user->uid && in_array($form_state['values']['teacher'],array(NULL,'',0))) {
        form_set_error('teacher', t('The Teacher must be mandatory for clients.'));
      }
    }
  }
  if(arg(3) == 'Personal information'){
    if(!in_array($role[0],array(3,4,5,8))){ //siteadmin,teacher,parent,schooladmin
      if(!(boolean)($form_state['values']['profile_parent_fname'])) {
        form_set_error('parent_fname', t('The parent firstname must be mandatory for clients.'));
      }
      if(!(boolean)($form_state['values']['profile_parent_lname'])) {
        form_set_error('parent_lname', t('The parent lastname must be mandatory for clients.'));
      }
      if(!(boolean)($form_state['values']['profile_parent_email'])) {
        form_set_error('parent_mail', t('The Teacher must be mandatory for clients.'));
      }
    }
  }
}

function bj_user_details_validator(&$form, &$form_state){
  global $user;
  //var_dump($form_state['values']['roles']);
  if(!in_array($form_state['values']['roles'],array(3))){//siteadmin
    if(!(boolean)($form_state['values']['school'])) {
      form_set_error('school', t('The school must be mandatory.'));
    }
  }
  if(!in_array($form_state['values']['roles'],array(3,4,5,8))){ //siteadmin,teacher,parent,schooladmin
    if($user->uid && in_array($form_state['values']['teacher'],array(NULL,'',0))) {
      form_set_error('teacher', t('The Teacher must be mandatory for clients.'));
    }
    if(!(boolean)($form_state['values']['profile_parent_fname'])) {
      form_set_error('parent_fname', t('The parent firstname must be mandatory for clients.'));
    }
    if(!(boolean)($form_state['values']['profile_parent_lname'])) {
      form_set_error('parent_lname', t('The parent lastname must be mandatory for clients.'));
    }
    if(!(boolean)($form_state['values']['profile_parent_email'])) {
      form_set_error('parent_mail', t('The Teacher must be mandatory for clients.'));
    }
    if($user->uid && !(boolean)($form_state['values']['grade'])) {
      form_set_error('grade', t('The grade must be mandatory for clients.'));
    }
    if(!(boolean)($form_state['values']['learning_disablity'])) {
      form_set_error('learning_disablity', t('The learning disablity must be mandatory for clients.'));
    }
    $exp_date = mktime(0,0,0,$form_state['values']['profile_expire_date']['month'],$form_state['values']['profile_expire_date']['day'],$form_state['values']['profile_expire_date']['year']);
    $today = mktime(0,0,0,date("m"),date("d")+1,date("Y"));
    if($exp_date <= $today){
      form_set_error('profile_expire_date', t('Expire date should be greater then today.'));
    }
  }
  
  $role = $form_state['values']['roles'];
  unset($form_state['values']['roles']);
  $form_state['values']['roles'][$role] = $role;
}

function brainjogging_is_student(){
  global $user;
    if(in_array('independent client',$user->roles) || in_array('dependent client',$user->roles)){
   return true;
  }
  return false;
}

function brainjogging_user($op, &$edit, &$account, $category = NULL) {
  switch($op){
    case 'view':
      unset($account -> roles[2]);
      $role = array_keys($account -> roles);
      $role_id = $role[0];
      
      if(in_array($role_id,array(4,6,7,8))){
        $school = db_result(db_query("SELECT school_name FROM {bj_school} s,{bj_user_schools} us WHERE s.sid = us.sid AND us.uid = ".$account->uid));
        $account->content['Brainjogging Information']['bj_details'][] = array('#type' => 'user_profile_item', '#title' => 'School', '#value' => $school);
      }
      
      if(in_array($role_id,array(6,7)) ){        
        //db_query("INSERT INTO {bj_user_teachers} (uid,tid) VALUES (".$edit['uid'].",".$edit['teacher'].")");
        //unset($edit['teacher']);
        
        $grade = db_result(db_query("SELECT name FROM {bj_grade} g, {bj_user_grades} ug WHERE ug.gid = g.gid AND ug.uid = ".$account->uid));
        $account->content['Brainjogging Information']['bj_details'][] = array('#type' => 'user_profile_item', '#title' => 'Grade', '#value' => $grade);
        //add the Learning Disabilty
        $ld = db_result(db_query("SELECT name FROM {bj_learning_disability} ld , {bj_user_disabilities} uld WHERE ld.did = uld.did AND uld.uid = ".$account->uid));
        $account->content['Brainjogging Information']['bj_details'][] = array('#type' => 'user_profile_item', '#title' => 'Learing Disability', '#value' => $ld);
      }
      break;
    case 'load':
      //add the grade
      $grade = db_result(db_query("SELECT gid FROM {bj_user_grades} WHERE uid = ".$account->uid));
      $account->grade = $grade;
      //add the Learning Disabilty
      $ld = db_result(db_query("SELECT did FROM {bj_user_disabilities} WHERE uid = ".$account->uid));
      $account->learning_disability = $ld;
      //add the School
      $school = db_result(db_query("SELECT sid FROM {bj_user_schools} WHERE uid = ".$account->uid));
      $account->school = $school;
      break;
    case 'insert':
      $role = array_keys($edit['roles']);
      if($edit['uid']){
        
        //if(in_array($role[0],array(7))){
        //  $user['name'] = strtolower($edit['parent_fname']."_".$edit['parent_lname']);
        //  $user['pass'] = $edit['pass'];
        //  $user['mail'] = $edit['parent_mail'];
        //  $user['init'] = $edit['parent_mail'];
        //  $user['roles'] = array(5=>'parent');
        //  $user['status'] = 1;
        //  $user['fname'] = $edit['parent_fname'];
        //  $user['lname'] = $edit['parent_lname'];
        //  $user['phone'] = $edit['phone'];
        //  $user['address'] = $edit['address'];
        //  $parent = user_save('',$user);
        //  db_query("INSERT INTO {bj_user_parents} (uid,pid) VALUES (".$edit['uid'].",".$parent->uid.") ");
        //}
        
        $role = array_keys($edit['roles']);
        $role_id = $role[0];
        
        if(in_array($role_id,array(4,6,7,8))){
          db_query("INSERT INTO {bj_user_schools} (uid,sid) VALUES (".$edit['uid'].",".$edit['school'].")");
          unset($edit['school']);
        }
        
        if(in_array($role_id,array(6,7)) ){        
          db_query("INSERT INTO {bj_user_teachers} (uid,tid) VALUES (".$edit['uid'].",".$edit['teacher'].")");
          unset($edit['teacher']);
          
          db_query("INSERT INTO {bj_user_grades} (uid,gid) VALUES (".$edit['uid'].",".$edit['grade'].")");
          unset($edit['grade']);
          
          db_query("INSERT INTO {bj_user_disabilities} (uid,did) VALUES (".$edit['uid'].",".$edit['learning_disablity'].")");
          unset($edit['learning_disablity']);
        }
        else{
          unset($edit['teacher']);
          unset($edit['grade']);
          unset($edit['learning_disablity']);
        }
      }
      break;
  case 'after_update':
    if($account->uid){
      $role = $account->roles;
      unset($role[2]);
      $role = array_keys($role);
      $role_id = $role[0];
      
      if(arg(3) == 'Brainjogging Information'){
        if(in_array($role_id,array(4,6,7,8))){
          db_query("UPDATE {bj_user_schools} SET sid = ".$edit['school']." WHERE uid = ".$account->uid);
        }
        
        if(in_array($role_id,array(6,7)) ){ 
          db_query("UPDATE {bj_user_grades} SET gid = ".$edit['grade']." WHERE uid = ".$account->uid);
          db_query("UPDATE {bj_user_disabilities} SET did = ".$edit['learning_disablity']." WHERE uid = ".$account->uid);
        }
      }
    }
    break;
  case 'delete': 
    db_query("DELETE FROM {bj_user_grades} WHERE uid = ".$account->uid);
    db_query("DELETE FROM {bj_user_disabilities} WHERE uid = ".$account->uid);
    break;
  }
  
}